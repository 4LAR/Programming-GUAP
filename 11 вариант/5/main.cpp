/*
  –ó–∞–¥–∞–Ω–∏—è –Ω–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É—é —Ä–∞–±–æ—Ç—É –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è –≤ –∫–∞–∂–¥–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–µ. –ü—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º
  –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ, —Ç–∞–∫ –∏ –Ω–µ–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –º–∞—Å—Å–∏–≤—ã. –†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏—Ö
  –∑–∞–¥–∞—ê—Ç—Å—è –∏–º–µ–Ω–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Å—Ç–∞–Ω—Ç–æ–π.

  –í–∞—Ä–∏–∞–Ω—Ç 11
    –í –æ–¥–Ω–æ–º–µ—Ä–Ω–æ–º –º–∞—Å—Å–∏–≤–µ, —Å–æ—Å—Ç–æ—è—â–µ–º –∏–∑ n –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –≤—ã—á–∏—Å–ª–∏—Ç—å:
    1. –Ω–æ–º–µ—Ä –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ –º–æ–¥—É–ª—é —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞;
    2. —Å—É–º–º—É –º–æ–¥—É–ª–µ–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ
    —ç–ª–µ–º–µ–Ω—Ç–∞.
  –°–∂–∞—Ç—å –º–∞—Å—Å–∏–≤, —É–¥–∞–ª–∏–≤ –∏–∑ –Ω–µ–≥–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –≤–µ–ª–∏—á–∏–Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ
   ùëé, ùëè . –û—Å–≤–æ–±–æ–¥–∏–≤—à–∏–µ—Å—è –≤ –∫–æ–Ω—Ü–µ –º–∞—Å—Å–∏–≤–∞ —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω—É–ª—è–º–∏.

*/

#include <iostream>
using namespace std;

#include "libs/lib.h"
#include <cmath>

int main() {
	// —Å–º–µ–Ω–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏
  system("chcp 65001");

  draw_line(20);

  // –≤–≤–æ–¥ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
  int size;
  while (true) {
    cout << "–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞: ";
    size = read_int();

    if (size > 1) {
      break;
    } else {
      cout << "–ú–∞—Å—Å–∏–≤ –≤ –¥–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 2 —ç–ª–µ–º–µ–Ω—Ç–æ–≤." << endl;
    }
  }

  double *arr = (double*) malloc(size * sizeof(double));

  for (int i = 0; i < size; i++){
    cout << "array [" << i << "] = ";
    arr[i] = read_int();
  }

  draw_line(20);

  // –≤—ã–≤–æ–¥–∏–º –º–∞—Å—Å–∏–≤
  draw_float_array(arr, size);

  draw_line(20);

  // –ù–æ–º–µ—Ä –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ –º–æ–¥—É–ª—é —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞
  int min_id = 0;
  for (int i = 1; i < size; i++) {
    if (fabs(arr[i]) < fabs(arr[min_id]))
      min_id = i;
  }

  cout << "–ù–æ–º–µ—Ä(–∏–Ω–¥–µ–∫—Å) –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ –º–æ–¥—É–ª—é —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞: " << min_id << endl;

  // –°—É–º–º–∞ –º–æ–¥—É–ª–µ–π –ø–æ—Å–ª–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
  bool negative = false;
  float summ = 0;
  for (int i = 0; i < size; i++) {
    if (!negative && arr[i] < 0) {
      negative = true;
    } else if (negative){
      summ += fabs(arr[i]);
    }
  }

  if (!negative)
    cout << "–í –º–∞—Å—Å–∏–≤–µ –Ω–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞\n";
  else
    cout << "–°—É–º–º–∞ –º–æ–¥—É–ª–µ–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –ø–æ—Å–ª–µ 1 –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞: " << summ << endl;

  draw_line(20);

  // –≤–≤–æ–¥ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
  int a, b, k;
  cout << "–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω [a, b]\n";
  while (true) {
    cout << "A = ";
    a = read_int();
    cout << "B = ";
    b = read_int();

    // –º–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ —á–∏—Å–ª–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Ö –ø–µ—Ä–µ–ø—É—Ç–∞–ª
    if (a > b) {
      k = a;
      a = b;
      b = k;
    }

    // –µ—Å–ª–∏ —á–∏—Å–ª–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ, —Ç–æ –≤–≤–æ–¥–∏–º –∑–∞–Ω–æ–≤–æ
    if (a == b) {
      cout << "A –∏ B –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏." << endl;
      draw_line(20);

    } else {
      // –µ—Å–ª–∏ –≤—Å—ë –æ–∫ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
      break;
    }

  }

  // –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤
  double *new_arr = (double*) malloc(size * sizeof(double));
  int j = 0;
  for (int i = 0; i < size; i++) {
    if (!((arr[i] >= a) && (arr[i] <= b))) {
      new_arr[j++] = arr[i];
    }
  }

  for (int i = j; i < size; i++) {
    new_arr[i] = 0;
  }

  // –≤—ã–≤–æ–¥–∏–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤
  draw_line(20);
  draw_float_array(new_arr, size);
  draw_line(20);

  // —É–¥–∞–ª–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤
  free(arr);
  free(new_arr);

	return 0;
}
