;Разработать функцию, увеличивающую в исходном списке нечетные
;элементы (по значению) на 1 и уменьшающую четные на 2.
;Например:
;Вход: (1 2 3 4 5 6 7 8 9).
;Выход: (2 0 4 2 6 4 6 6 10).

; чётное(T) не чётное(NIL)
(defun isEven (num)
  (zerop(logand num 1))
)

; функция для решения задания
(defun transform (lst)  
  (cond (                                               ; if
      (null lst)                                        ; условие
      nil                                               ; если true
    )
    (T (cond (                                          ; else ; if
          (isEven(car lst))                             ; условие (если чётное)
          (cons (- (car lst) 2)(transform(cdr lst)))    ; если true (уменьшаем число на 2 и вызываем рекурсивно функцию без текущего элемента)
        )
        (T (cons (+ (car lst) 1)(transform(cdr lst))))  ; если false (уменьшаем число на 2 и вызываем рекурсивно функцию без текущего элемента)
      )
    )
  )
)

(terpri)(write (list 2 2 3 4 5 6 7 8))                  ; изначальный список
(terpri)(write (transform (list 2 2 3 4 5 6 7 8)))      ; вызываем функцию и выводим результат
